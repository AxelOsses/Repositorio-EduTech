<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.edutech.cursos_inscripciones_service.CursosInscripcionesServiceApplicationTests" time="10.155" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="20"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\gilga\OneDrive\Desktop\Fullstack 1\ClonReposi\Repositorio-EduTech\cursos-inscripciones-service\target\test-classes;C:\Users\gilga\OneDrive\Desktop\Fullstack 1\ClonReposi\Repositorio-EduTech\cursos-inscripciones-service\target\classes;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\gilga\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\gilga\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\gilga\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\gilga\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\gilga\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\gilga\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\gilga\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\gilga\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\gilga\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\gilga\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\gilga\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\gilga\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\gilga\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\gilga\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\gilga\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\gilga\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\gilga\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\gilga\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\gilga\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\gilga\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\gilga\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\gilga\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\gilga\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\gilga\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\gilga\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\gilga\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\gilga\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\gilga\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-hateoas\3.3.11\spring-boot-starter-hateoas-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\hateoas\spring-hateoas\2.3.4\spring-hateoas-2.3.4.jar;C:\Users\gilga\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\gilga\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\gilga\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\gilga\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\gilga\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\gilga\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\gilga\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\gilga\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\gilga\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\gilga\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\gilga\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\gilga\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\gilga\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\gilga\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\gilga\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\gilga\.m2\repository\net\datafaker\datafaker\2.3.0\datafaker-2.3.0.jar;C:\Users\gilga\.m2\repository\com\github\curious-odd-man\rgxgen\2.0\rgxgen-2.0.jar;C:\Users\gilga\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.13.40\libphonenumber-8.13.40.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.11\spring-boot-starter-test-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-test\3.3.11\spring-boot-test-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.11\spring-boot-test-autoconfigure-3.3.11.jar;C:\Users\gilga\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\gilga\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\gilga\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\gilga\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\gilga\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\gilga\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\gilga\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\gilga\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\gilga\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\gilga\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.5\junit-jupiter-5.10.5.jar;C:\Users\gilga\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.5\junit-jupiter-params-5.10.5.jar;C:\Users\gilga\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\gilga\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\gilga\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-test\6.1.19\spring-test-6.1.19.jar;C:\Users\gilga\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\gilga\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\gilga\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\gilga\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar;C:\Users\gilga\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\gilga\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.5\junit-jupiter-engine-5.10.5.jar;C:\Users\gilga\.m2\repository\org\junit\platform\junit-platform-engine\1.10.5\junit-platform-engine-1.10.5.jar;C:\Users\gilga\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\gilga\.m2\repository\org\junit\platform\junit-platform-commons\1.10.5\junit-platform-commons-1.10.5.jar;C:\Users\gilga\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.5\junit-jupiter-api-5.10.5.jar;C:\Users\gilga\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Santiago"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="20"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CL"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-20\bin"/>
    <property name="sun.java.command" value="C:\Users\gilga\AppData\Local\Temp\surefire15123308961602496012\surefirebooter-20250701181231192_3.jar C:\Users\gilga\AppData\Local\Temp\surefire15123308961602496012 2025-07-01T18-12-30_549-jvmRun1 surefire-20250701181231192_1tmp surefire_0-20250701181231192_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\gilga\OneDrive\Desktop\Fullstack 1\ClonReposi\Repositorio-EduTech\cursos-inscripciones-service\target\test-classes;C:\Users\gilga\OneDrive\Desktop\Fullstack 1\ClonReposi\Repositorio-EduTech\cursos-inscripciones-service\target\classes;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\gilga\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\gilga\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\gilga\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\gilga\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\gilga\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\gilga\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\gilga\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\gilga\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\gilga\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\gilga\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\gilga\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\gilga\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\gilga\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\gilga\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\gilga\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\gilga\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\gilga\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\gilga\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\gilga\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\gilga\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\gilga\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\gilga\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\gilga\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\gilga\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\gilga\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\gilga\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\gilga\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\gilga\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-hateoas\3.3.11\spring-boot-starter-hateoas-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\hateoas\spring-hateoas\2.3.4\spring-hateoas-2.3.4.jar;C:\Users\gilga\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\gilga\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\gilga\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\gilga\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\gilga\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\gilga\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\gilga\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\gilga\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\gilga\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\gilga\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\gilga\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\gilga\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\gilga\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\gilga\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\gilga\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\gilga\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\gilga\.m2\repository\net\datafaker\datafaker\2.3.0\datafaker-2.3.0.jar;C:\Users\gilga\.m2\repository\com\github\curious-odd-man\rgxgen\2.0\rgxgen-2.0.jar;C:\Users\gilga\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.13.40\libphonenumber-8.13.40.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.11\spring-boot-starter-test-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-test\3.3.11\spring-boot-test-3.3.11.jar;C:\Users\gilga\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.11\spring-boot-test-autoconfigure-3.3.11.jar;C:\Users\gilga\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\gilga\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\gilga\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\gilga\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\gilga\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\gilga\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\gilga\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\gilga\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\gilga\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\gilga\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.5\junit-jupiter-5.10.5.jar;C:\Users\gilga\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.5\junit-jupiter-params-5.10.5.jar;C:\Users\gilga\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\gilga\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\gilga\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\gilga\.m2\repository\org\springframework\spring-test\6.1.19\spring-test-6.1.19.jar;C:\Users\gilga\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\gilga\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\gilga\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\gilga\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar;C:\Users\gilga\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\gilga\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.5\junit-jupiter-engine-5.10.5.jar;C:\Users\gilga\.m2\repository\org\junit\platform\junit-platform-engine\1.10.5\junit-platform-engine-1.10.5.jar;C:\Users\gilga\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\gilga\.m2\repository\org\junit\platform\junit-platform-commons\1.10.5\junit-platform-commons-1.10.5.jar;C:\Users\gilga\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.5\junit-jupiter-api-5.10.5.jar;C:\Users\gilga\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\gilga"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-07-18"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-20"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\gilga\OneDrive\Desktop\Fullstack 1\ClonReposi\Repositorio-EduTech\cursos-inscripciones-service"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\gilga\AppData\Local\Temp\surefire15123308961602496012\surefirebooter-20250701181231192_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="20.0.2+9-78"/>
    <property name="user.name" value="gilga"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\gilga\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\gilga\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="20.0.2"/>
    <property name="user.dir" value="C:\Users\gilga\OneDrive\Desktop\Fullstack 1\ClonReposi\Repositorio-EduTech\cursos-inscripciones-service"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="20644"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-20\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\app\gilga\product\21c\dbhomeXE\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\MinGW\bin;C:\Program Files\HP\HP One Agent;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-20\bin;C:\Users\gilga\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.15.6-hotspot\bin;C:\Users\gilga\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\gilga\AppData\Local\Programs\Python\Python39\;C:\Users\gilga\AppData\Local\Microsoft\WindowsApps;;C:\Users\gilga\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\gilga\AppData\Local\Programs\cursor\resources\app\bin;c:\Users\gilga\AppData\Roaming\Code\User\globalStorage\github.copilot-chat\debugCommand;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="20.0.2+9-78"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="64.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[cursos-inscripciones-service] "/>
  </properties>
  <testcase name="contextLoads" classname="com.edutech.cursos_inscripciones_service.CursosInscripcionesServiceApplicationTests" time="0.054">
    <system-out><![CDATA[2025-07-01T18:12:40.653-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.edutech.cursos_inscripciones_service.CursosInscripcionesServiceApplicationTests]: CursosInscripcionesServiceApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-01T18:12:40.673-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.edutech.cursos_inscripciones_service.CursosInscripcionesServiceApplication for test class com.edutech.cursos_inscripciones_service.CursosInscripcionesServiceApplicationTests
2025-07-01T18:12:40.690-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] o.s.b.d.r.RestartApplicationListener     : Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::               (v3.3.11)

2025-07-01T18:12:40.744-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] rsosInscripcionesServiceApplicationTests : Starting CursosInscripcionesServiceApplicationTests using Java 20.0.2 with PID 20644 (started by gilga in C:\Users\gilga\OneDrive\Desktop\Fullstack 1\ClonReposi\Repositorio-EduTech\cursos-inscripciones-service)
2025-07-01T18:12:40.744-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] rsosInscripcionesServiceApplicationTests : The following 1 profile is active: "test"
2025-07-01T18:12:41.417-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-01T18:12:41.560-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 117 ms. Found 11 JPA repository interfaces.
2025-07-01T18:12:42.266-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-01T18:12:42.411-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-01T18:12:42.520-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-01T18:12:42.895-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-01T18:12:42.979-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-01T18:12:43.790-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e214d39
2025-07-01T18:12:43.805-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-01T18:12:44.047-04:00  WARN 20644 --- [cursos-inscripciones-service] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-01T18:12:45.930-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    alter table curso 
       modify column descripcion TEXT
Hibernate: 
    alter table evaluacion 
       modify column descripcion TEXT
Hibernate: 
    alter table modulo 
       modify column descripcion TEXT
Hibernate: 
    alter table tipo_evaluacion 
       modify column descripcion TEXT
2025-07-01T18:12:46.491-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-01T18:12:47.564-04:00  WARN 20644 --- [cursos-inscripciones-service] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-01T18:12:48.403-04:00  INFO 20644 --- [cursos-inscripciones-service] [           main] rsosInscripcionesServiceApplicationTests : Started CursosInscripcionesServiceApplicationTests in 7.715 seconds (process running for 16.86)
Limpiando base de datos...
Hibernate: 
    select
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        ne1_0.id_modulo_cursado,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        nota_evaluacion ne1_0
Hibernate: 
    select
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        mc1_0.id_progreso_curso 
    from
        modulo_cursado mc1_0
Hibernate: 
    select
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio 
    from
        progreso_curso pc1_0
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        mc1_0.id_progreso_curso,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        modulo_cursado mc1_0 
    left join
        modulo m1_0 
            on m1_0.id_modulo=mc1_0.id_modulo 
    left join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    left join
        nota_evaluacion ne1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    where
        mc1_0.id_progreso_curso=?
Hibernate: 
    select
        mc1_0.id_progreso_curso,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        modulo_cursado mc1_0 
    left join
        modulo m1_0 
            on m1_0.id_modulo=mc1_0.id_modulo 
    left join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    left join
        nota_evaluacion ne1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    where
        mc1_0.id_progreso_curso=?
Hibernate: 
    select
        mc1_0.id_progreso_curso,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        modulo_cursado mc1_0 
    left join
        modulo m1_0 
            on m1_0.id_modulo=mc1_0.id_modulo 
    left join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    left join
        nota_evaluacion ne1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    where
        mc1_0.id_progreso_curso=?
Hibernate: 
    select
        mc1_0.id_progreso_curso,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        modulo_cursado mc1_0 
    left join
        modulo m1_0 
            on m1_0.id_modulo=mc1_0.id_modulo 
    left join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    left join
        nota_evaluacion ne1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    where
        mc1_0.id_progreso_curso=?
Hibernate: 
    select
        mc1_0.id_progreso_curso,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        modulo_cursado mc1_0 
    left join
        modulo m1_0 
            on m1_0.id_modulo=mc1_0.id_modulo 
    left join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    left join
        nota_evaluacion ne1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    where
        mc1_0.id_progreso_curso=?
Hibernate: 
    select
        mc1_0.id_progreso_curso,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        modulo_cursado mc1_0 
    left join
        modulo m1_0 
            on m1_0.id_modulo=mc1_0.id_modulo 
    left join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    left join
        nota_evaluacion ne1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    where
        mc1_0.id_progreso_curso=?
Hibernate: 
    select
        mc1_0.id_progreso_curso,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        modulo_cursado mc1_0 
    left join
        modulo m1_0 
            on m1_0.id_modulo=mc1_0.id_modulo 
    left join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    left join
        nota_evaluacion ne1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    where
        mc1_0.id_progreso_curso=?
Hibernate: 
    delete 
    from
        progreso_curso 
    where
        id_progreso_curso=?
Hibernate: 
    delete 
    from
        progreso_curso 
    where
        id_progreso_curso=?
Hibernate: 
    delete 
    from
        progreso_curso 
    where
        id_progreso_curso=?
Hibernate: 
    delete 
    from
        progreso_curso 
    where
        id_progreso_curso=?
Hibernate: 
    delete 
    from
        progreso_curso 
    where
        id_progreso_curso=?
Hibernate: 
    delete 
    from
        progreso_curso 
    where
        id_progreso_curso=?
Hibernate: 
    delete 
    from
        progreso_curso 
    where
        id_progreso_curso=?
Hibernate: 
    select
        ic1_0.id_instructor_curso,
        ic1_0.id_curso,
        ic1_0.fecha_otorgacion,
        ic1_0.id_usuario 
    from
        instructor_curso ic1_0
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    delete 
    from
        inscripcion 
    where
        id_inscripcion=?
Hibernate: 
    select
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion 
    from
        evaluacion e1_0
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    delete 
    from
        evaluacion 
    where
        id_evaluacion=?
Hibernate: 
    select
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    delete 
    from
        modulo 
    where
        id_modulo=?
Hibernate: 
    select
        cc1_0.id_curso_categoria,
        cc1_0.id_categoria,
        cc1_0.id_curso 
    from
        curso_categoria cc1_0
Hibernate: 
    select
        c1_0.id_categoria,
        c1_0.nombre 
    from
        categoria c1_0 
    where
        c1_0.id_categoria=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_categoria,
        c1_0.nombre 
    from
        categoria c1_0 
    where
        c1_0.id_categoria=?
Hibernate: 
    select
        c1_0.id_categoria,
        c1_0.nombre 
    from
        categoria c1_0 
    where
        c1_0.id_categoria=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_categoria,
        c1_0.nombre 
    from
        categoria c1_0 
    where
        c1_0.id_categoria=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    delete 
    from
        curso_categoria 
    where
        id_curso_categoria=?
Hibernate: 
    delete 
    from
        curso_categoria 
    where
        id_curso_categoria=?
Hibernate: 
    delete 
    from
        curso_categoria 
    where
        id_curso_categoria=?
Hibernate: 
    delete 
    from
        curso_categoria 
    where
        id_curso_categoria=?
Hibernate: 
    delete 
    from
        curso_categoria 
    where
        id_curso_categoria=?
Hibernate: 
    delete 
    from
        curso_categoria 
    where
        id_curso_categoria=?
Hibernate: 
    delete 
    from
        curso_categoria 
    where
        id_curso_categoria=?
Hibernate: 
    delete 
    from
        curso_categoria 
    where
        id_curso_categoria=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0
Hibernate: 
    select
        cc1_0.id_curso,
        cc1_0.id_curso_categoria,
        cc1_0.id_categoria,
        c1_0.id_categoria,
        c1_0.nombre 
    from
        curso_categoria cc1_0 
    left join
        categoria c1_0 
            on c1_0.id_categoria=cc1_0.id_categoria 
    where
        cc1_0.id_curso=?
Hibernate: 
    select
        m1_0.id_curso,
        m1_0.id_modulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    where
        m1_0.id_curso=? 
    order by
        m1_0.numero_orden
Hibernate: 
    select
        cc1_0.id_curso,
        cc1_0.id_curso_categoria,
        cc1_0.id_categoria,
        c1_0.id_categoria,
        c1_0.nombre 
    from
        curso_categoria cc1_0 
    left join
        categoria c1_0 
            on c1_0.id_categoria=cc1_0.id_categoria 
    where
        cc1_0.id_curso=?
Hibernate: 
    select
        m1_0.id_curso,
        m1_0.id_modulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    where
        m1_0.id_curso=? 
    order by
        m1_0.numero_orden
Hibernate: 
    select
        cc1_0.id_curso,
        cc1_0.id_curso_categoria,
        cc1_0.id_categoria,
        c1_0.id_categoria,
        c1_0.nombre 
    from
        curso_categoria cc1_0 
    left join
        categoria c1_0 
            on c1_0.id_categoria=cc1_0.id_categoria 
    where
        cc1_0.id_curso=?
Hibernate: 
    select
        m1_0.id_curso,
        m1_0.id_modulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    where
        m1_0.id_curso=? 
    order by
        m1_0.numero_orden
Hibernate: 
    select
        cc1_0.id_curso,
        cc1_0.id_curso_categoria,
        cc1_0.id_categoria,
        c1_0.id_categoria,
        c1_0.nombre 
    from
        curso_categoria cc1_0 
    left join
        categoria c1_0 
            on c1_0.id_categoria=cc1_0.id_categoria 
    where
        cc1_0.id_curso=?
Hibernate: 
    select
        m1_0.id_curso,
        m1_0.id_modulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    where
        m1_0.id_curso=? 
    order by
        m1_0.numero_orden
Hibernate: 
    select
        cc1_0.id_curso,
        cc1_0.id_curso_categoria,
        cc1_0.id_categoria,
        c1_0.id_categoria,
        c1_0.nombre 
    from
        curso_categoria cc1_0 
    left join
        categoria c1_0 
            on c1_0.id_categoria=cc1_0.id_categoria 
    where
        cc1_0.id_curso=?
Hibernate: 
    select
        m1_0.id_curso,
        m1_0.id_modulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    where
        m1_0.id_curso=? 
    order by
        m1_0.numero_orden
Hibernate: 
    delete 
    from
        curso 
    where
        id_curso=?
Hibernate: 
    delete 
    from
        curso 
    where
        id_curso=?
Hibernate: 
    delete 
    from
        curso 
    where
        id_curso=?
Hibernate: 
    delete 
    from
        curso 
    where
        id_curso=?
Hibernate: 
    delete 
    from
        curso 
    where
        id_curso=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0
Hibernate: 
    delete 
    from
        tipo_evaluacion 
    where
        id_tipo_evaluacion=?
Hibernate: 
    delete 
    from
        tipo_evaluacion 
    where
        id_tipo_evaluacion=?
Hibernate: 
    delete 
    from
        tipo_evaluacion 
    where
        id_tipo_evaluacion=?
Hibernate: 
    delete 
    from
        tipo_evaluacion 
    where
        id_tipo_evaluacion=?
Hibernate: 
    delete 
    from
        tipo_evaluacion 
    where
        id_tipo_evaluacion=?
Hibernate: 
    delete 
    from
        tipo_evaluacion 
    where
        id_tipo_evaluacion=?
Hibernate: 
    select
        c1_0.id_categoria,
        c1_0.nombre 
    from
        categoria c1_0
Hibernate: 
    select
        cc1_0.id_categoria,
        cc1_0.id_curso_categoria,
        cc1_0.id_curso,
        c2_0.id_curso,
        c2_0.descripcion,
        c2_0.duracion_horas,
        c2_0.estado,
        c2_0.fecha_actualizacion,
        c2_0.fecha_creacion,
        c2_0.numero_orden,
        c2_0.titulo 
    from
        curso_categoria cc1_0 
    left join
        curso c2_0 
            on c2_0.id_curso=cc1_0.id_curso 
    where
        cc1_0.id_categoria=?
Hibernate: 
    select
        cc1_0.id_categoria,
        cc1_0.id_curso_categoria,
        cc1_0.id_curso,
        c2_0.id_curso,
        c2_0.descripcion,
        c2_0.duracion_horas,
        c2_0.estado,
        c2_0.fecha_actualizacion,
        c2_0.fecha_creacion,
        c2_0.numero_orden,
        c2_0.titulo 
    from
        curso_categoria cc1_0 
    left join
        curso c2_0 
            on c2_0.id_curso=cc1_0.id_curso 
    where
        cc1_0.id_categoria=?
Hibernate: 
    select
        cc1_0.id_categoria,
        cc1_0.id_curso_categoria,
        cc1_0.id_curso,
        c2_0.id_curso,
        c2_0.descripcion,
        c2_0.duracion_horas,
        c2_0.estado,
        c2_0.fecha_actualizacion,
        c2_0.fecha_creacion,
        c2_0.numero_orden,
        c2_0.titulo 
    from
        curso_categoria cc1_0 
    left join
        curso c2_0 
            on c2_0.id_curso=cc1_0.id_curso 
    where
        cc1_0.id_categoria=?
Hibernate: 
    select
        cc1_0.id_categoria,
        cc1_0.id_curso_categoria,
        cc1_0.id_curso,
        c2_0.id_curso,
        c2_0.descripcion,
        c2_0.duracion_horas,
        c2_0.estado,
        c2_0.fecha_actualizacion,
        c2_0.fecha_creacion,
        c2_0.numero_orden,
        c2_0.titulo 
    from
        curso_categoria cc1_0 
    left join
        curso c2_0 
            on c2_0.id_curso=cc1_0.id_curso 
    where
        cc1_0.id_categoria=?
Hibernate: 
    delete 
    from
        categoria 
    where
        id_categoria=?
Hibernate: 
    delete 
    from
        categoria 
    where
        id_categoria=?
Hibernate: 
    delete 
    from
        categoria 
    where
        id_categoria=?
Hibernate: 
    delete 
    from
        categoria 
    where
        id_categoria=?
Base de datos limpiada.
Generando categorías...
Hibernate: 
    insert 
    into
        categoria
        (nombre) 
    values
        (?)
Hibernate: 
    insert 
    into
        categoria
        (nombre) 
    values
        (?)
Hibernate: 
    insert 
    into
        categoria
        (nombre) 
    values
        (?)
Hibernate: 
    insert 
    into
        categoria
        (nombre) 
    values
        (?)
Generando tipos de evaluación...
Hibernate: 
    insert 
    into
        tipo_evaluacion
        (descripcion, nombre) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tipo_evaluacion
        (descripcion, nombre) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tipo_evaluacion
        (descripcion, nombre) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tipo_evaluacion
        (descripcion, nombre) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tipo_evaluacion
        (descripcion, nombre) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tipo_evaluacion
        (descripcion, nombre) 
    values
        (?, ?)
Generando cursos...
Hibernate: 
    select
        c1_0.id_categoria,
        c1_0.nombre 
    from
        categoria c1_0
Hibernate: 
    insert 
    into
        curso
        (descripcion, duracion_horas, estado, fecha_actualizacion, fecha_creacion, numero_orden, titulo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        curso
        (descripcion, duracion_horas, estado, fecha_actualizacion, fecha_creacion, numero_orden, titulo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        curso
        (descripcion, duracion_horas, estado, fecha_actualizacion, fecha_creacion, numero_orden, titulo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        curso
        (descripcion, duracion_horas, estado, fecha_actualizacion, fecha_creacion, numero_orden, titulo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        curso
        (descripcion, duracion_horas, estado, fecha_actualizacion, fecha_creacion, numero_orden, titulo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Generando evaluaciones...
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        evaluacion
        (id_curso, descripcion, id_modulo, nombre, id_tipo_evaluacion) 
    values
        (?, ?, ?, ?, ?)
Generando inscripciones...
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        inscripcion
        (id_curso, esta_aprobado, id_usuario, fecha_inscripcion) 
    values
        (?, ?, ?, ?)
Generando instructor-curso...
Hibernate: 
    insert 
    into
        instructor_curso
        (id_curso, fecha_otorgacion, id_usuario) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        instructor_curso
        (id_curso, fecha_otorgacion, id_usuario) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        instructor_curso
        (id_curso, fecha_otorgacion, id_usuario) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        instructor_curso
        (id_curso, fecha_otorgacion, id_usuario) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        instructor_curso
        (id_curso, fecha_otorgacion, id_usuario) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        instructor_curso
        (id_curso, fecha_otorgacion, id_usuario) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        instructor_curso
        (id_curso, fecha_otorgacion, id_usuario) 
    values
        (?, ?, ?)
Generando progreso de cursos...
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    insert 
    into
        progreso_curso
        (id_inscripcion, porcentaje_avance, tiempo_total_estudio) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        progreso_curso
        (id_inscripcion, porcentaje_avance, tiempo_total_estudio) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        progreso_curso
        (id_inscripcion, porcentaje_avance, tiempo_total_estudio) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        progreso_curso
        (id_inscripcion, porcentaje_avance, tiempo_total_estudio) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        progreso_curso
        (id_inscripcion, porcentaje_avance, tiempo_total_estudio) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        progreso_curso
        (id_inscripcion, porcentaje_avance, tiempo_total_estudio) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        progreso_curso
        (id_inscripcion, porcentaje_avance, tiempo_total_estudio) 
    values
        (?, ?, ?)
Generando relaciones Curso-Categoría...
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        curso_categoria
        (id_categoria, id_curso) 
    values
        (?, ?)
Generando módulos...
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo
        (id_curso, descripcion, numero_orden, titulo) 
    values
        (?, ?, ?, ?)
Generando módulos cursados...
Hibernate: 
    select
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio 
    from
        progreso_curso pc1_0
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    select
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion 
    from
        inscripcion i1_0 
    join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        i1_0.id_inscripcion=?
Hibernate: 
    insert 
    into
        modulo_cursado
        (esta_aprobado, fecha_aprovacion, id_modulo, id_progreso_curso) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo_cursado
        (esta_aprobado, fecha_aprovacion, id_modulo, id_progreso_curso) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo_cursado
        (esta_aprobado, fecha_aprovacion, id_modulo, id_progreso_curso) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo_cursado
        (esta_aprobado, fecha_aprovacion, id_modulo, id_progreso_curso) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo_cursado
        (esta_aprobado, fecha_aprovacion, id_modulo, id_progreso_curso) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo_cursado
        (esta_aprobado, fecha_aprovacion, id_modulo, id_progreso_curso) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        modulo_cursado
        (esta_aprobado, fecha_aprovacion, id_modulo, id_progreso_curso) 
    values
        (?, ?, ?, ?)
Generando notas de evaluación...
Hibernate: 
    select
        e1_0.id_evaluacion,
        e1_0.id_curso,
        e1_0.descripcion,
        e1_0.id_modulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion 
    from
        evaluacion e1_0
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre 
    from
        tipo_evaluacion te1_0 
    where
        te1_0.id_tipo_evaluacion=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo 
    from
        curso c1_0 
    where
        c1_0.id_curso=?
Hibernate: 
    select
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        mc1_0.id_progreso_curso 
    from
        modulo_cursado mc1_0
Hibernate: 
    select
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    where
        m1_0.id_modulo=?
Hibernate: 
    select
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        e1_0.descripcion,
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m2_0.id_modulo,
        m2_0.id_curso,
        m2_0.descripcion,
        m2_0.numero_orden,
        m2_0.titulo,
        mc1_0.id_progreso_curso,
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        nota_evaluacion ne1_0 
    join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    left join
        curso c1_0 
            on c1_0.id_curso=e1_0.id_curso 
    left join
        modulo m1_0 
            on m1_0.id_modulo=e1_0.id_modulo 
    left join
        tipo_evaluacion te1_0 
            on te1_0.id_tipo_evaluacion=e1_0.id_tipo_evaluacion 
    left join
        modulo_cursado mc1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        modulo m2_0 
            on m2_0.id_modulo=mc1_0.id_modulo 
    left join
        progreso_curso pc1_0 
            on pc1_0.id_progreso_curso=mc1_0.id_progreso_curso 
    where
        ne1_0.id_modulo_cursado=?
Hibernate: 
    select
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio 
    from
        progreso_curso pc1_0 
    join
        inscripcion i1_0 
            on i1_0.id_inscripcion=pc1_0.id_inscripcion 
    left join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        pc1_0.id_progreso_curso=?
Hibernate: 
    select
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    where
        m1_0.id_modulo=?
Hibernate: 
    select
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        e1_0.descripcion,
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m2_0.id_modulo,
        m2_0.id_curso,
        m2_0.descripcion,
        m2_0.numero_orden,
        m2_0.titulo,
        mc1_0.id_progreso_curso,
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        nota_evaluacion ne1_0 
    join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    left join
        curso c1_0 
            on c1_0.id_curso=e1_0.id_curso 
    left join
        modulo m1_0 
            on m1_0.id_modulo=e1_0.id_modulo 
    left join
        tipo_evaluacion te1_0 
            on te1_0.id_tipo_evaluacion=e1_0.id_tipo_evaluacion 
    left join
        modulo_cursado mc1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        modulo m2_0 
            on m2_0.id_modulo=mc1_0.id_modulo 
    left join
        progreso_curso pc1_0 
            on pc1_0.id_progreso_curso=mc1_0.id_progreso_curso 
    where
        ne1_0.id_modulo_cursado=?
Hibernate: 
    select
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio 
    from
        progreso_curso pc1_0 
    join
        inscripcion i1_0 
            on i1_0.id_inscripcion=pc1_0.id_inscripcion 
    left join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        pc1_0.id_progreso_curso=?
Hibernate: 
    select
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    where
        m1_0.id_modulo=?
Hibernate: 
    select
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        e1_0.descripcion,
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m2_0.id_modulo,
        m2_0.id_curso,
        m2_0.descripcion,
        m2_0.numero_orden,
        m2_0.titulo,
        mc1_0.id_progreso_curso,
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        nota_evaluacion ne1_0 
    join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    left join
        curso c1_0 
            on c1_0.id_curso=e1_0.id_curso 
    left join
        modulo m1_0 
            on m1_0.id_modulo=e1_0.id_modulo 
    left join
        tipo_evaluacion te1_0 
            on te1_0.id_tipo_evaluacion=e1_0.id_tipo_evaluacion 
    left join
        modulo_cursado mc1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        modulo m2_0 
            on m2_0.id_modulo=mc1_0.id_modulo 
    left join
        progreso_curso pc1_0 
            on pc1_0.id_progreso_curso=mc1_0.id_progreso_curso 
    where
        ne1_0.id_modulo_cursado=?
Hibernate: 
    select
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio 
    from
        progreso_curso pc1_0 
    join
        inscripcion i1_0 
            on i1_0.id_inscripcion=pc1_0.id_inscripcion 
    left join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        pc1_0.id_progreso_curso=?
Hibernate: 
    select
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    where
        m1_0.id_modulo=?
Hibernate: 
    select
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        e1_0.descripcion,
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m2_0.id_modulo,
        m2_0.id_curso,
        m2_0.descripcion,
        m2_0.numero_orden,
        m2_0.titulo,
        mc1_0.id_progreso_curso,
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        nota_evaluacion ne1_0 
    join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    left join
        curso c1_0 
            on c1_0.id_curso=e1_0.id_curso 
    left join
        modulo m1_0 
            on m1_0.id_modulo=e1_0.id_modulo 
    left join
        tipo_evaluacion te1_0 
            on te1_0.id_tipo_evaluacion=e1_0.id_tipo_evaluacion 
    left join
        modulo_cursado mc1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        modulo m2_0 
            on m2_0.id_modulo=mc1_0.id_modulo 
    left join
        progreso_curso pc1_0 
            on pc1_0.id_progreso_curso=mc1_0.id_progreso_curso 
    where
        ne1_0.id_modulo_cursado=?
Hibernate: 
    select
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio 
    from
        progreso_curso pc1_0 
    join
        inscripcion i1_0 
            on i1_0.id_inscripcion=pc1_0.id_inscripcion 
    left join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        pc1_0.id_progreso_curso=?
Hibernate: 
    select
        m1_0.id_modulo,
        m1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo 
    from
        modulo m1_0 
    join
        curso c1_0 
            on c1_0.id_curso=m1_0.id_curso 
    where
        m1_0.id_modulo=?
Hibernate: 
    select
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        e1_0.descripcion,
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m2_0.id_modulo,
        m2_0.id_curso,
        m2_0.descripcion,
        m2_0.numero_orden,
        m2_0.titulo,
        mc1_0.id_progreso_curso,
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        nota_evaluacion ne1_0 
    join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    left join
        curso c1_0 
            on c1_0.id_curso=e1_0.id_curso 
    left join
        modulo m1_0 
            on m1_0.id_modulo=e1_0.id_modulo 
    left join
        tipo_evaluacion te1_0 
            on te1_0.id_tipo_evaluacion=e1_0.id_tipo_evaluacion 
    left join
        modulo_cursado mc1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        modulo m2_0 
            on m2_0.id_modulo=mc1_0.id_modulo 
    left join
        progreso_curso pc1_0 
            on pc1_0.id_progreso_curso=mc1_0.id_progreso_curso 
    where
        ne1_0.id_modulo_cursado=?
Hibernate: 
    select
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        e1_0.descripcion,
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m2_0.id_modulo,
        m2_0.id_curso,
        m2_0.descripcion,
        m2_0.numero_orden,
        m2_0.titulo,
        mc1_0.id_progreso_curso,
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        nota_evaluacion ne1_0 
    join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    left join
        curso c1_0 
            on c1_0.id_curso=e1_0.id_curso 
    left join
        modulo m1_0 
            on m1_0.id_modulo=e1_0.id_modulo 
    left join
        tipo_evaluacion te1_0 
            on te1_0.id_tipo_evaluacion=e1_0.id_tipo_evaluacion 
    left join
        modulo_cursado mc1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        modulo m2_0 
            on m2_0.id_modulo=mc1_0.id_modulo 
    left join
        progreso_curso pc1_0 
            on pc1_0.id_progreso_curso=mc1_0.id_progreso_curso 
    where
        ne1_0.id_modulo_cursado=?
Hibernate: 
    select
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        i1_0.id_inscripcion,
        i1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        i1_0.esta_aprobado,
        i1_0.id_usuario,
        i1_0.fecha_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio 
    from
        progreso_curso pc1_0 
    join
        inscripcion i1_0 
            on i1_0.id_inscripcion=pc1_0.id_inscripcion 
    left join
        curso c1_0 
            on c1_0.id_curso=i1_0.id_curso 
    where
        pc1_0.id_progreso_curso=?
Hibernate: 
    select
        ne1_0.id_nota_evaluacion,
        ne1_0.comentario,
        ne1_0.id_evaluacion,
        e1_0.id_evaluacion,
        e1_0.id_curso,
        c1_0.id_curso,
        c1_0.descripcion,
        c1_0.duracion_horas,
        c1_0.estado,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.numero_orden,
        c1_0.titulo,
        e1_0.descripcion,
        m1_0.id_modulo,
        m1_0.id_curso,
        m1_0.descripcion,
        m1_0.numero_orden,
        m1_0.titulo,
        e1_0.nombre,
        e1_0.id_tipo_evaluacion,
        te1_0.id_tipo_evaluacion,
        te1_0.descripcion,
        te1_0.nombre,
        mc1_0.id_modulo_cursado,
        mc1_0.esta_aprobado,
        mc1_0.fecha_aprovacion,
        mc1_0.id_modulo,
        m2_0.id_modulo,
        m2_0.id_curso,
        m2_0.descripcion,
        m2_0.numero_orden,
        m2_0.titulo,
        mc1_0.id_progreso_curso,
        pc1_0.id_progreso_curso,
        pc1_0.id_inscripcion,
        pc1_0.porcentaje_avance,
        pc1_0.tiempo_total_estudio,
        ne1_0.puntaje_obtenido,
        ne1_0.puntaje_requerido 
    from
        nota_evaluacion ne1_0 
    join
        evaluacion e1_0 
            on e1_0.id_evaluacion=ne1_0.id_evaluacion 
    left join
        curso c1_0 
            on c1_0.id_curso=e1_0.id_curso 
    left join
        modulo m1_0 
            on m1_0.id_modulo=e1_0.id_modulo 
    left join
        tipo_evaluacion te1_0 
            on te1_0.id_tipo_evaluacion=e1_0.id_tipo_evaluacion 
    left join
        modulo_cursado mc1_0 
            on mc1_0.id_modulo_cursado=ne1_0.id_modulo_cursado 
    left join
        modulo m2_0 
            on m2_0.id_modulo=mc1_0.id_modulo 
    left join
        progreso_curso pc1_0 
            on pc1_0.id_progreso_curso=mc1_0.id_progreso_curso 
    where
        ne1_0.id_modulo_cursado=?
Hibernate: 
    insert 
    into
        nota_evaluacion
        (comentario, id_evaluacion, id_modulo_cursado, puntaje_obtenido, puntaje_requerido) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        nota_evaluacion
        (comentario, id_evaluacion, id_modulo_cursado, puntaje_obtenido, puntaje_requerido) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        nota_evaluacion
        (comentario, id_evaluacion, id_modulo_cursado, puntaje_obtenido, puntaje_requerido) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        nota_evaluacion
        (comentario, id_evaluacion, id_modulo_cursado, puntaje_obtenido, puntaje_requerido) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        nota_evaluacion
        (comentario, id_evaluacion, id_modulo_cursado, puntaje_obtenido, puntaje_requerido) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        nota_evaluacion
        (comentario, id_evaluacion, id_modulo_cursado, puntaje_obtenido, puntaje_requerido) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        nota_evaluacion
        (comentario, id_evaluacion, id_modulo_cursado, puntaje_obtenido, puntaje_requerido) 
    values
        (?, ?, ?, ?, ?)
Notas de evaluación generadas: 7
¡Datos de prueba generados exitosamente!
Hibernate: 
    select
        count(*) 
    from
        categoria c1_0
Categorías: 4
Hibernate: 
    select
        count(*) 
    from
        curso c1_0
Cursos: 5
Hibernate: 
    select
        count(*) 
    from
        modulo m1_0
Módulos: 23
Hibernate: 
    select
        count(*) 
    from
        tipo_evaluacion te1_0
Tipos de evaluación: 6
Hibernate: 
    select
        count(*) 
    from
        evaluacion e1_0
Evaluaciones: 10
Hibernate: 
    select
        count(*) 
    from
        inscripcion i1_0
Inscripciones: 10
Hibernate: 
    select
        count(*) 
    from
        instructor_curso ic1_0
Instructor-Curso: 7
Hibernate: 
    select
        count(*) 
    from
        progreso_curso pc1_0
Progreso de cursos: 7
Hibernate: 
    select
        count(*) 
    from
        modulo_cursado mc1_0
Módulos cursados: 7
Hibernate: 
    select
        count(*) 
    from
        nota_evaluacion ne1_0
Notas de evaluación: 7
Hibernate: 
    select
        count(*) 
    from
        curso_categoria cc1_0
Relaciones Curso-Categoría: 9
]]></system-out>
  </testcase>
</testsuite>